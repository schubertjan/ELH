tymyClean <- tymy[,-c(1,nzv)]
View(tymyClean)
?use_data
teams2017_2018 <- tymyClean
use_data(teams2017_2018,ELH)
use_data(teams2017_2018,"ELH")
setwd("./cats")
document()
library(devtools)
document()
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' corsiTeam <- teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
x$downloadData <- rep(Sys.Date(),nrow(x))
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
x
}
strelyTeam <- teamLoad("http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026")
View(strelyTeam)
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' corsiTeam <- teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
x$downloadData <- rep(Sys.Date(),nrow(x))
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
x
}
strelyTeam <- teamLoad("http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026")
View(strelyTeam)
corsiTeam <- teamLoad(removeLine = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi")
corsiTeam <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi")
View(corsiTeam)
library(urltools)
pageUrl <- ("http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi")
urltools::url_parse(pageUrl)
x <- urltools::url_parse(pageUrl)
View(x)
urltools::url_parse(x)
strsplit(x$parameter,"&")
unlist(strsplit(x$parameter,"&"))
y <- unlist(strsplit(x$parameter,"&"))
y
unlist(strsplit(y[1],"="))
getSeason <- function(pageUrl) {
x <- urltools::url_parse(pageUrl)
y <- unlist(strsplit(x$parameter,"&"))
unlist(strsplit(y[1],"="))[2]
}
getSeason(pageUrl)
pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' getSeason(pageUrl)
pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
getSeason(pageUrl)
getSeason("http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2015&competition=5756")
getSeason("http://hokej.cz/tipsport-extraliga/stats-center/player-analytic?season=2017&competition=6026&yearFrom=&stranger=0&state=&stats-section=shots&stats-all=1")
pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/player-analytic?season=2017&competition=6026&yearFrom=&stranger=0&state=&stats-section=shots&stats-all=1"
playerLoad(pageUrl)
#' A Player Load Function
#'
#' This function allows you to download player data from Hokej.cz
#' @param pageURL Hokej.cz page url with player stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/player-analytic?season=2017&competition=6026&yearFrom=&stranger=0&state=&stats-section=shots&stats-all=1"
#' playerLoad(pageUrl)
playerLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:6)] <- apply(x[,-c(1:6)],2,as.numeric)
x$GP <- as.numeric(x$GP)
} else (x)
#clean variable names
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
#add variables
x$TOI <- lubridate::ms(x$TOI)
x$minutes <- lubridate::minute(x$TOI)+(lubridate::second(x$TOI)/60)
x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
x
}
playerLoad(pageUrl)
x <- playerLoad(pageUrl)
apply(x,2,var)
apply(x,2,var,na.rm=T)
#' A Player Load Function
#'
#' This function allows you to download player data from Hokej.cz
#' @param pageURL Hokej.cz page url with player stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/player-analytic?season=2017&competition=6026&yearFrom=&stranger=0&state=&stats-section=shots&stats-all=1"
#' playerLoad(pageUrl)
playerLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:6)] <- apply(x[,-c(1:6)],2,as.numeric)
x$GP <- as.numeric(x$GP)
} else (x)
#clean variable names
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
#add variables
x$TOI <- lubridate::ms(x$TOI)
x$minutes <- lubridate::minute(x$TOI)+(lubridate::second(x$TOI)/60)
x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
x
}
x <- playerLoad(pageUrl)
apply(x,2,var,na.rm=T)
apply(x,2,is.numeric)
str(x)
read.csv("table.csv")
tableKey <- read.csv("table.csv")
library(devtools)
use_data(tableKey,pkg = ELH)
use_data(tableKey,pkg = "ELH")
use_data(tableKey)
tableKey
pageUrl
param_set(pageUrl, key = "competition", value = "6172")
param_set(pageUrl, key = "season", value = "2015")
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
View(shots)
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
x
}
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
View(shots)
x <- urltools::url_parse(pageUrl)
x
pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
x <- urltools::url_parse(pageUrl)
x$parameter
url_compose(pageUrl)
y <- unlist(strsplit(x$parameter,"&"))
y
getSeason <- function(pageUrl) {
x <- urltools::url_parse(pageUrl)
y <- unlist(strsplit(x$parameter,"&"))
unlist(strsplit(y[grep("season",y)],"="))[2]
}
getSeason(pageUrl)
competitionType <- function(pageUrl) {
x <- urltools::url_parse(pageUrl)
y <- unlist(strsplit(x$parameter,"&"))
unlist(strsplit(y[grep("competition",y)],"="))[2]
}
competitionType(pageUrl)
getCompetition(pageUrl)
#' A Get Competition Type Function
#'
#' This function returns the table competition id from the Hokej.cz url
#' @param pageURL Hokej.cz page url with team/player stats table.
#' @keywords team,player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' getCompetition(pageUrl)
getCompetition <- function(pageUrl) {
x <- urltools::url_parse(pageUrl)
y <- unlist(strsplit(x$parameter,"&"))
unlist(strsplit(y[grep("competition",y)],"="))[2]
}
getCompetition(pageUrl)
x <- getCompetition(pageUrl)
?which
which(tableKey$Competition == x)
which(tableKey$Competition == 34234)
which(tableKey$Competition == 6172)
data(tableKey)
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
View(shots)
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
compId <- getCompetition(pageUrl)
x$competitionType <- data(tableKey)[which(tableKey$Competition == compId),3]
x
}
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
compId <- getCompetition(pageUrl)
data(tableKey)[which(tableKey$Competition == compId),3]
data(tableKey)
rm(list = "tableKey")
data(tableKey)
tableKey[,2]
tableKey[3,2]
data(tableKey)[1,]
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
compId <- getCompetition(pageUrl)
compKey <- data(tableKey)
x$competitionType <- compKey[which(tableKey$Competition == compId),3]
x
}
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
compKey <- data(tableKey)
compKey[which(tableKey$Competition == compId),3]
which(compKey$Competition == compId)
compKey <- data(tableKey)
compKey
data(tableKey)
tableKey[which(tableKey$Competition == compId),3]
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
rm("tableKey")
data(tableKey)
tableKey[which(tableKey$Competition == compId),3]
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
rownames(x) <- x[,1]
x <- x[,-1]
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
compId <- getCompetition(pageUrl)
data(tableKey)
x$competitionType <- tableKey[which(tableKey$Competition == compId),3]
x
}
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
View(shots)
corsi <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=corsi")
View(corsi)
faceoff <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=faceoff")
sort(faceoff,rownames(faceoff))
arrange(faceoff,rownames(faceoff))
library(dplyr)
arrange(faceoff,rownames(faceoff))
x <- arrange(faceoff,rownames(faceoff))
rownames(x)
rownames(faceoff)
head(faceoff)
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, ".table-stats")
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
colnames(x)[1] <- "Team"
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
compId <- getCompetition(pageUrl)
data(tableKey)
x$competitionType <- tableKey[which(tableKey$Competition == compId),3]
x
}
faceoff <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=faceoff")
View(faceoff)
STRELY 2
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
CORSI
corsi <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=corsi")
corsi <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=corsi")
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
x <- merge(corsi,faceoff,by="Team")
View(x)
shots <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
corsi <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=corsi")
faceoff <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=faceoff")
wins <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=won")
loses <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581&stats-section=lost")
goals <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581")
powerplay <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=powerplay")
shorthand <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=shorthanded")
penalty <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=penalty")
hits <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=ri")
toi <- teamLoad(removeRow = T,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=time")
attendence <- teamLoad(removeRow = F,"http://hokej.cz/tipsport-extraliga/stats-center/team-stats?season=2013&competition=3581&stats-section=visitors")
View(toi)
View(powerplay)
#' A Team Load Function
#'
#' This function allows you to download team data from Hokej.cz
#' @param pageURL Hokej.cz page url with team stats table.
#' @param removeRow Removes top row from the source table if it contains two headers. Default to TRUE.
#' @keywords player
#' @export
#' @examples
#' pageUrl <- "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2017&competition=6026&stats-section=corsi"
#' teamLoad(pageUrl,removeRow = F)
teamLoad <- function(pageUrl,removeRow=TRUE,node=c(".table-stats",".table-soupiska")) {
html <- xml2::read_html(pageUrl)
cast <- rvest::html_nodes(html, node)
df <- rvest::html_table(cast,fill = T)
x <- df[[1]]
if(removeRow) {
colnames(x) <- x[1,]
x <- x[-1,]
x[,-c(1:2)] <- apply(x[,-c(1:2)],2,as.numeric)
} else (x)
#clean variables
colnames(x) <- iconv(colnames(x), to='ASCII//TRANSLIT')
colnames(x) <- gsub("%","pr",colnames(x))
colnames(x) <- gsub("[/]","per",colnames(x))
colnames(x) <- gsub("[#]","Rank",colnames(x))
colnames(x) <- gsub("[.]","_",colnames(x))
x <- x[,-1]
colnames(x)[1] <- "Team"
#add variables
#    x$downloadData <- rep(Sys.Date(),nrow(x))
x$seasonStart <- getSeason(pageUrl)
compId <- getCompetition(pageUrl)
data(tableKey)
x$competitionType <- tableKey[which(tableKey$Competition == compId),3]
x
}
shots <- teamLoad(removeRow = T,node = ".table-stats",
pageUrl = "http://hokej.cz/tipsport-extraliga/stats-center/team-analytic-stats?season=2013&competition=3581")
View(shots)
points <- teamLoad(removeRow = F,node = ".table-soupiska",
pageUrl = "http://hokej.cz/tipsport-extraliga/table?table-filter-season=2017&table-filter-competition=6026")
View(points)
